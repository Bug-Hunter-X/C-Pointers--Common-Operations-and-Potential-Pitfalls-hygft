int main() {
  int x = 10;
  int *ptr = &x; 
  *ptr = 20; // Modifies the value of x
  int y = *ptr; // y now holds the value 20

  int arr[5] = {1, 2, 3, 4, 5};
  int *arrPtr = arr; // arrPtr points to the first element of arr
  *arrPtr = 100; // Modifies the first element of arr

  // Example of using pointers to swap two values
  int a = 5, b = 10;
  int *ptrA = &a, *ptrB = &b;
  int temp = *ptrA; 
  *ptrA = *ptrB;
  *ptrB = temp;

  //Demonstrates safe memory allocation and deallocation (dynamic memory)
  int *dynamic_array = (int*)malloc(5 * sizeof(int));
  if(dynamic_array == NULL){ //Check if memory allocation was successful
      return 1; // Indicate an error
  }
  for(int i = 0; i < 5; i++) {
      dynamic_array[i] = i + 1;
  }
  free(dynamic_array); //Free allocated memory to prevent memory leaks
  dynamic_array = NULL; //Set pointer to NULL after freeing

  return 0;
}